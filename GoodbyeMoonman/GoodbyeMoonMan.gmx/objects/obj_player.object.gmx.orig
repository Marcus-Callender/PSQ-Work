<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_score = 0;
m_time = 0;

m_preActive = true;
m_active = false;
m_postActive = false;
m_endGameTimer = 3.0;

//stops animations
image_speed = 0;

m_velocityY = 20.0;
m_velocityX = 0.0;
m_gravity = 9.81/600.0;

m_maxVelocityX = 10.0;
m_stepVelocityX = 0.50;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (m_active)
    m_time += 0.016;

if (m_postActive)
    m_endGameTimer -= 0.016;
    
if (m_endGameTimer &lt;= 0.0)
{
    event_user(0);
    //game_end();
    room_goto(rm_nameEntry);
}
    
m_velocityY -= m_gravity;

if (m_velocityY &lt;= 0.0 &amp;&amp; m_active)
{
    m_active = false;
    m_postActive = true;
}

if (keyboard_check(ord('D')) &amp;&amp; (m_active/* || m_postActive*/))
{
    m_velocityX += m_stepVelocityX;
    
    if (m_velocityX &gt; m_maxVelocityX)
    {
        m_velocityX = m_maxVelocityX;
    }
}

if (keyboard_check(ord('A')) &amp;&amp; (m_active/* || m_postActive*/))
{
    m_velocityX -= m_stepVelocityX;
    
    if (m_velocityX &lt; -m_maxVelocityX)
    {
        m_velocityX = -m_maxVelocityX;
    }
}

x += m_velocityX;

if (x &gt; 1280)
{
    x = 1280;
}
else if (x &lt; 0)
{
    x = 0;
}

if (m_postActive)
    y -= m_velocityY;
else if (m_active)
    obj_persistantData.m_height += m_velocityY;
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_persistantData</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_user(0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
